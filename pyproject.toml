[build-system]
requires = ['setuptools']
build-backend = 'setuptools.build_meta'

[project]
name = 'freecad-stubs'
version = '1.0.14'
description = "Python stubs for FreeCAD"
readme = 'README.md'
requires-python = '>=3.6'
license = {text = 'GPL-3.0'}
authors = [{name = 'ostr00000'}]
keywords = ['FreeCAD', 'stubs']
classifiers = [
    'Intended Audience :: Developers',
    'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3.6',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Typing :: Stubs Only',
]
urls = {repository = 'https://github.com/ostr00000/freecad-stubs'}
dependencies = [
    # 'pivy', # cannot install it in a normal way, should be installed by FreeCAD anyway
    'qtpy',
]

[project.optional-dependencies]
generate = ['more-itertools', 'ordered-set']
check = ['mypy', 'pylint']

[tool.black]
skip-string-normalization = true

[tool.mypy]
files = './lib'
warn_unused_configs = true
check_untyped_defs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
# This is stub directory, so we allow here an empty body
module = 'freecad_stub_gen.additional.*'
disable_error_code = ['empty-body']

[[tool.mypy.overrides]]
# mypy problem: https://github.com/python/mypy/issues/5382
module = 'freecad_stub_gen.generators.common.signature_merger'
disable_error_code = ['arg-type']

[[tool.mypy.overrides]]
# mypy problem: https://github.com/python/mypy/issues/12534
module = 'freecad_stub_gen.module_namespace'
disable_error_code = ['return-value', 'return']

[[tool.mypy.overrides]]
# mypy problem: https://github.com/python/mypy/issues/6799
module = 'freecad_stub_gen.generators.common.gen_property.gen_dynamic'
disable_error_code = ['misc']

[[tool.mypy.overrides]]
# Mypy do not allow variable annotation for `Enum`
module = 'freecad_stub_gen.generators.common.gen_property.property_type'
disable_error_code = ['misc']

[tool.pylint.basic]
include-naming-hint = true
ignore-paths = ['.*/additional/']
attr-naming-style = "camelCase"
function-naming-style = "camelCase"
method-naming-style = "camelCase"
# short names should be used for shot-living variables
# https://github.com/PyCQA/pylint/issues/2018
# variable-naming-style = "camelCase"
variable-rgx = '([^\W\dA-Z][^\W_]*|__[^\W\dA-Z_]\w+__)$'
# argument-naming-style = "camelCase"
argument-rgx = '([^\W\dA-Z][^\W_]*|__[^\W\dA-Z_]\w+__)$'
typealias-rgx = '^_{0,2}(?!T[A-Z]|Type)[A-Z]+[a-z]+(?:[A-Z][a-z]+)*(?:_t|_T)?$'

[tool.pylint.imports]
# all values from __main__ are allowed at any level
allow-any-import-level = [
    'freecad_stub_gen.generators.types_enum.generateTypes',
    'freecad_stub_gen.generate.generateFreeCadStubs',
]

[tool.pylint."messages control"]
disable = [
    # ### Convention
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring", # [fix toml formatting]
    # ### Refactor
    "too-few-public-methods",
    # useless when there is inheritance https://github.com/PyCQA/pylint/issues/4352
    'duplicate-code',
    # ### Warning
    # we debug expression in f-strings (`=`)
    "logging-fstring-interpolation",
    # tmp disable - should be fixed later
    'fixme',
    'too-many-ancestors',
    'too-many-instance-attributes',
    'too-many-arguments',
]

[tool.setuptools]
package-dir = {'' = 'freecad_stubs'}

[tool.setuptools.package-data]
'*' = ['**/*.pyi']

[tool.tomlsort]
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
